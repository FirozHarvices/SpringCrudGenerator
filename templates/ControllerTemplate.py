template = """

package ${package}.controller;

import ${package}.model.*;
import ${package}.constants.Constants;
import ${package}.payload.response.GenericResponse;
import ${package}.services.${model.cap}Service;
import io.swagger.annotations.Api;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;
import javax.validation.Valid;


//Auto Generated By SpringCrudGenerator2.0

@RestController
@Api(value = "Service For ${model.cap}")
@RequestMapping(Constants.${model.cu})
public class ${model.cap}Controller {
    @Autowired
    private ${model.cap}Service service;

    @GetMapping(value = Constants.ALL)
    public GenericResponse all() {
        GenericResponse genericResponse = new GenericResponse();
        try {
            genericResponse.setData(service.getAll());
            genericResponse.setStatus(true);
            genericResponse.setMessage("successful");
            return genericResponse;
        } catch (Exception e) {
            e.printStackTrace();
            genericResponse.setMessage(e.getLocalizedMessage());
            genericResponse.setStatus(false);
            return genericResponse;
        }
    }

    @GetMapping(value = Constants.ALL_ACTIVE)
    public GenericResponse allActive() {
        GenericResponse genericResponse = new GenericResponse();
        try {
            genericResponse.setData(service.getAllActive());
            genericResponse.setStatus(true);
            genericResponse.setMessage("successful");
            return genericResponse;
        } catch (Exception e) {
            e.printStackTrace();
            genericResponse.setMessage(e.getLocalizedMessage());
            genericResponse.setStatus(false);
            return genericResponse;
        }
    }

    @GetMapping(value = Constants.BY_ID + "{id}")
    public GenericResponse byId(@PathVariable(value = "id") Long id) {
        GenericResponse genericResponse = new GenericResponse();
        try {
            genericResponse.setData(service.getById(id));
            genericResponse.setMessage("successful");
            genericResponse.setStatus(true);
            return genericResponse;
        } catch (Exception e) {
            e.printStackTrace();
            genericResponse.setMessage(e.getLocalizedMessage());
            genericResponse.setStatus(false);
            return genericResponse;
        }
    }

    @PostMapping(value = Constants.CREATE , consumes = MediaType.APPLICATION_JSON_VALUE)
    public GenericResponse create(@Valid @RequestBody ${model.cap} request) {
        GenericResponse genericResponse = new GenericResponse();
        try {
            genericResponse.setData(service.save(request));
            genericResponse.setStatus(true);
            genericResponse.setMessage("successful");
            return genericResponse;
        } catch (Exception e) {
            e.printStackTrace();
            genericResponse.setMessage(e.getLocalizedMessage());
            genericResponse.setStatus(false);
            return genericResponse;
        }
    }

    @PutMapping(value = Constants.UPDATE , consumes = MediaType.APPLICATION_JSON_VALUE)
    public GenericResponse update(@Valid @RequestBody ${model.cap} request) {
        GenericResponse genericResponse = new GenericResponse();
        try {
            genericResponse.setData(service.update(request));
            genericResponse.setStatus(true);
            genericResponse.setMessage("successful");
            return genericResponse;
        } catch (Exception e) {
            e.printStackTrace();
            genericResponse.setMessage(e.getLocalizedMessage());
            genericResponse.setStatus(false);
            return genericResponse;
        }
    }

    @DeleteMapping(value = Constants.DELETE + "{id}")
    public GenericResponse delete(@PathVariable(value = "id") Long id) {
        GenericResponse genericResponse = new GenericResponse();
        try {
            genericResponse.setData(service.delete(id));
            genericResponse.setMessage("successful");
            genericResponse.setStatus(true);
            return genericResponse;
        } catch (Exception e) {
            e.printStackTrace();
            genericResponse.setMessage(e.getLocalizedMessage());
            genericResponse.setStatus(false);
            return genericResponse;
        }
    }
  }
"""